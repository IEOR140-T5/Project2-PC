package pc;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

/**
 * MouseDemo.java
 * Created on July 15, 2008, 7:46 PM 
 * @author Roger Glassey
 */

public class MouseDemo extends JFrame implements ActionListener {

	// Variables declaration 
	private JPanel DPanel;
	private JLabel X, Y;
	private JTextField xField, yField;
	private Drawing mousePanel;
	int x1, y1, x2, y2;
	boolean isLine = true;
	Color color = Color.WHITE;
	
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MouseDemo frame = new MouseDemo();
					frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	
	/** Creates new form MouseDemo */
	public MouseDemo() {
		initComponents();
		mousePanel = new Drawing();
		mousePanel.setSize(500, 400);
		DPanel.add(mousePanel);
	}

	class Drawing extends JPanel {
		public void paint(Graphics g) {
			System.out.println("valid line: " + isLine);
			if (isLine)
				g.setColor(Color.RED);
			else
				g.setColor(Color.GREEN);
			g.fillOval(x2 - 3, y2 - 3, 6, 6);
			if (isLine) {
				g.setColor(Color.BLACK);
				g.drawLine(x1, y1, x2, y2);
				System.out.println("drawing coordinates: " + "(x1,y1) (" + x1 +
					"," + y1 + ") to " + "(x2,y2) (" + x2 + "," + y2 + ")");
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		DPanel = new JPanel();
		DPanel.setLayout(null);
		//DPanel.addMouseListener(new MouseAdapter());
		
		//GroupLayout DPanelLayout = new GroupLayout(DPanel);
		//DPanel.setLayout(DPanelLayout); // make NULL 
		
		X = new JLabel("X");
		X.setHorizontalAlignment(SwingConstants.RIGHT);
		
		xField = new JTextField(5);
		xField.addActionListener(this);
		
		Y = new JLabel("Y");
		Y.setHorizontalAlignment(SwingConstants.RIGHT);
		
		yField = new JTextField(5);
		yField.addActionListener(this);
		
		setTitle("Mouse Demo");
		
		
		DPanel.setPreferredSize(new Dimension(300, 200));
		DPanel.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				DPanelMouseClicked(e);
			}
		});
		
		DPanel.addMouseMotionListener(new MouseMotionAdapter() {
			public void mouseMoved(MouseEvent e) {
				DPanelMouseMoved(e);
			}
		});

		
		
		/**DPanelLayout.setHorizontalGroup(DPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 497,
				Short.MAX_VALUE));
		DPanelLayout.setVerticalGroup(DPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 317,
				Short.MAX_VALUE));*/
	
		/**	xField.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				xFieldActionPerformed(e);
			}
		});*/
		
		/**yField.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				yFieldActionPerformed(e);
			}
		});*/

		GroupLayout layout = new GroupLayout(getContentPane());
		
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(X)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(xField,
										GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addGap(37, 37, 37)
								.addComponent(Y)
								.addGap(18, 18, 18)
								.addComponent(yField,
										GroupLayout.PREFERRED_SIZE,
										59,
										GroupLayout.PREFERRED_SIZE)
								.addGap(263, 263, 263))
				.addGroup(
						GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(26, Short.MAX_VALUE)
								.addComponent(DPanel,
										GroupLayout.PREFERRED_SIZE,
										499,
										GroupLayout.PREFERRED_SIZE)
								.addContainerGap()));

		layout.linkSize(SwingConstants.HORIZONTAL,
										new Component[] { X, Y, xField });

		layout.setVerticalGroup(layout
				.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												GroupLayout.Alignment.BASELINE)
												.addComponent(X)
												.addComponent(
														xField,
														GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(Y)
												.addComponent(
														yField,
														GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE,
														GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										28, Short.MAX_VALUE)
								.addComponent(DPanel,
										GroupLayout.PREFERRED_SIZE,
										319,
										GroupLayout.PREFERRED_SIZE)
								.addGap(26, 26, 26)));

		pack();
	}

	private void yFieldActionPerformed(ActionEvent e) {
	}

	private void xFieldActionPerformed(ActionEvent e) {
	}

	private void DPanelMouseClicked(MouseEvent e) {
		System.out.println("mouse coordinates clicked: (" +
											e.getX() + "," + e.getY() + ")");
		if (isLine) {
			x1 = x2;
			y1 = y2;
		}
		isLine = !isLine;
		mousePanel.repaint();

	}

	private void DPanelMouseMoved(MouseEvent e) {
		Point p = e.getPoint();
		x2 = (int) p.getX();
		y2 = (int) p.getY();
		xField.setText("" + x2);
		yField.setText("" + y2);
	}


	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

}
